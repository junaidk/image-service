openapi: 3.0.3
info:
  title: Image Upload Service API
  description: API documentation for the Image Upload Service.
  version: 1.0.0
servers:
  - url: https://api.example.com
    description: Production server

paths:
  /healthcheck:
    get:
      summary: Healthcheck
      description: Check if the service is running.
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "available"

  /v1/link/create:
    get:
      summary: Create a link
      description: Create a new link with an expiration time.
      parameters:
        - in: query
          name: expiration_time
          schema:
            type: string
            example: "5s"
          required: true
          description: The expiration time for the link (e.g., 5s for 5 seconds).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Link created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                    example: "https://example.com/link/abc123"

  /v1/image/upload/{timed-token}:
    post:
      summary: Upload an image
      description: Upload an image using a timed token.
      parameters:
        - in: path
          name: timed-token
          required: true
          schema:
            type: string
            description: The timed token used for authentication.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Image uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  images:
                    type: object
                    additionalProperties:
                      type: string
                      description: UUID of the uploaded image
                      example: "5e9f329c-a018-43de-a742-82e5a24c9a04"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized

  /v1/image/{id}:
    get:
      summary: Get an image
      description: Retrieve an image as an octet-stream.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: The ID of the image.
      responses:
        '200':
          description: Image retrieved successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: Image not found

  /v1/statistics:
    get:
      summary: Get service statistics
      description: Retrieve statistics about the service.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Service statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      top_image_format:
                        type: object
                        properties:
                          type:
                            type: string
                            example: "jpg"
                          count:
                            type: integer
                            example: 3
                      top_camera_model:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "Sony-HDR-HC3"
                            count:
                              type: integer
                              example: 1
                      image_upload_frequency:
                        type: array
                        items:
                          type: object
                          properties:
                            day:
                              type: string
                              format: date-time
                              example: "2024-08-15T00:00:00Z"
                            count:
                              type: integer
                              example: 3

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: Token
